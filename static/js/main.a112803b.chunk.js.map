{"version":3,"sources":["game/style.module.css","containers/App/style.module.css","game/modules/game/settingsConfig.ts","game/modules/game/storyConfig.ts","game/modules/game/circle/preload.ts","game/modules/scenes/assets/dialogs.ts","game/modules/scenes/assets/preloadData.ts","managers/config.ts","utils/createGuard.ts","utils/createListener.ts","managers/progressManager.ts","game/modules/scenes/modules/Player.ts","game/modules/scenes/modules/Dialog.ts","game/modules/scenes/modules/Extensions.ts","game/modules/scenes/modules/Level.ts","game/modules/scenes/modules/Interface.ts","game/modules/levels/_0.ts","game/modules/scenes/Default.ts","game/modules/service/config.ts","game/index.tsx","game/instance.ts","containers/App/index.tsx","index.js"],"names":["module","exports","settingsConfig","delta","width","height","y","buttons","margin","top","right","colors","names","text","triggerDebug","animation","ease","duration","storyConfig","tal","NAME","PORTRAIT","preloadData","data","Object","keys","forEach","key","method","assets","content","load","dialogs","portrait","name","replica","tileSets","gameResourcesData","image","map","spritesheet","frameWidth","frameHeight","endFrame","atlas","tilemapTiledJSON","savesNames","events","createGuard","checkedKey","value","result","createListener","emitter","event","callBack","addListener","removeListener","ProgressManager","state","coins","hp","EventEmitter","coinsListener","setCoins","v","localStorage","setItem","JSON","stringify","emit","hpListener","setHP","keysListener","setKey","Array","isArray","push","listeners","this","setters","getters","addCoin","getSavedValues","Number","parse","getItem","length","error","progressManager","localName","Player","scene","cursors","playerBody","playerVisual","playerWhite","camera","playerParamsConfig","blockMove","left","blocked","time","coordinates","x","HP","world","createPlayer","createCamera","createTeleport","playerBounce","layer","getObjectLayer","playerData","objects","physics","add","sprite","setAlpha","setDepth","Infinity","setBounce","setCircle","collider","body","setCollideWorldBounds","setBounds","widthInPixels","heightInPixels","setCollisionByExclusion","input","keyboard","createCursorKeys","setDefaultCoordinates","id","levelName","storeData","player","cameras","main","smoothMoveCameraTowards","target","smoothFactor","undefined","scrollX","scrollY","startX","startY","playerSprite","fx","preFX","addDisplacement","createAnchor","particles","speed","min","max","angle","scale","start","end","tint","blendMode","lifespan","rotate","emitting","alpha","Phaser","Math","Easing","Quadratic","InOut","tweens","targets","yoyo","loop","on","setPosition","explode","isBlocked","control","resetBlockMove","controlPlayerBody","velocity","maxXVelocity","startedXVelocity","flyXVelocity","wallJumpXVelocity","wallJumpYVelocity","jumpVelocity","inertia","playerAcceleration","oldVelocityX","isDown","down","none","up","setBlockMove","setVelocityX","setVelocityY","direction","moveBlockTime","canLeftMove","canRightMove","Dialog","sceneId","extensions","wrapper","activeDialog","sceneDialogs","game","config","sceneWidth","leftBGFrame","setOrigin","rightBGFrame","nextButton","setInteractive","setScrollFactor","skipButton","nextDialog","dialogEnd","nextButtonClick","bind","skipButtonClick","centerBG","tileSprite","container","hideTween","create","repeat","showTween","hide","show","createDialogTriggers","tween","onComplete","current","once","play","isActive","tweensPlay","dialogId","dialog","createPortrait","createName","createText","showDialog","imgName","firstFrame","list","imgFit","make","origin","style","font","color","wordWrap","useAdvancedWrap","portraitWidth","textMargin","destroy","actualReplicaNumber","valueOfReplica","clearDialog","isSkip","actualReplicaElement","callback","closeDialog","ignoredDialogs","actualSceneIgnored","newActualIgnored","Set","hideDialog","debug","createRectangle","triggerObjects","properties","find","trigger","zone","enable","setAllowGravity","moves","overlap","createConversation","Extensions","img","maxWidth","maxHeight","widthScale","heightScale","setScale","graphics","fillStyle","fillRect","props","reduce","acm","upLeftX","apply","upLeftY","upRightX","upRightY","maxY","rectWidth","rectHeight","arcadeBodyGuard","Level","invincible","createButtons","createWalls","createCoins","createTraps","createFinish","bridgetButtonsLayer","bridgetButtonsList","textures","get","getFrameNames","defaultButton","pushedButton","i","getPropsFromObject","btnX","btnY","button","invisible","buttonZone","Physics","Arcade","STATIC_BODY","currentKey","foundKey","setTimeout","setTexture","is_wall","activateWall","activateBridge","finishList","texture","finish","nextLevelId","console","log","anims","frames","frameRate","fireworks","coinsLayer","bridgesList","bridges","block","entries","blocks","findCorners","bridgeBody","setImmovable","setFriction","gameHeight","bridgeSprites","yFromDirection","from_top","bridge","traps","trap","playerModule","white","dead","setInterval","clearTimeout","GameInterface","hpBar","hitId","hitTween","prevHpValue","update","hit","createHPBar","recGraph","generateTexture","setTint","isBlink","clearInterval","percent","scaleY","level","interface","visual","restart","call","tilemap","layersTilesets","addTilesetImage","filter","createLayer","Scene","type","AUTO","parent","backgroundColor","default","arcade","gravity","Game","useState","refBox","setRefBox","useEffect","offsetWidth","className","css","root","ref","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a112803b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__D1GZz\",\"game\":\"style_game__1is8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__28lIV\"};","export const settingsConfig = {\n  gravity: 500,\n  maxXVelocity: 800,\n  startedXVelocity: 250,\n  flyXVelocity: 2,\n  jumpVelocity: 300,\n  inertia: 100,\n\n  wallJumpXVelocity: 500,\n  wallJumpYVelocity: 400,\n\n  moveBlockTime: 500, //ms\n  playerBounce: 0.2,\n\n  playerAcceleration: (delta: number) => delta / 2,\n\n  dialogWrapperMoveTime: 800,\n\n  portraits: {\n    width: 150,\n    height: 170,\n    y: 10,\n  },\n  dialog: {\n    buttons: {\n      width: 100,\n      height: 100,\n      margin: {\n        top: 10,\n        right: 15,\n      },\n    },\n    colors: {\n      names: \"red\",\n      text: \"white\",\n    },\n\n    triggerDebug: true,\n  },\n\n  bridges: {\n    animation: {\n      ease: \"Quad.easeInOut\",\n      duration: 1000,\n    },\n  },\n};\n","export const storyConfig = {\n  characters: {\n    tal: {\n      NAME: \"TAL\",\n      PORTRAIT: \"tal\",\n    },\n  },\n};\n","import { Scene } from \"phaser\";\nimport { PreloadTypes } from \"game/type\";\n\nexport function preloadData(this: Scene, data: PreloadTypes) {\n  debugger;\n  Object.keys(data).forEach((key) => {\n    const method = key as keyof PreloadTypes;\n    const assets = data[method];\n\n    assets?.forEach((content) => {\n      // @ts-ignore: Unreachable code error\n      const result = this.load[method](...content);\n    });\n  });\n}\n","import { DialogList } from \"game/type\";\nimport { storyConfig } from \"../../game/storyConfig\";\n\nconst { tal } = storyConfig.characters;\n\nexport const dialogs: DialogList = [\n  [\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica: \"Dialog #1\",\n    },\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica: \"Dialog #2\",\n    },\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica:\n        \"Dialog #3 (long): ----------- ############# ---------------------------- +++++++++++++++++++++++++++++++++++ $$$$$$$$$$$$$$$$$$$$ #################### ######################## ##########################\",\n    },\n    {\n      portrait: tal.PORTRAIT,\n      name: tal.NAME,\n      replica: \"Dialog #4\",\n    },\n  ],\n];\n","import { PreloadTypes } from \"game/type\";\nimport { storyConfig } from \"../../game/storyConfig\";\n\nexport const assets = \"assets/\";\n\nconst { tal } = storyConfig.characters;\n\nexport const tileSets = [\"platforms32x32\"];\n\nexport const gameResourcesData: PreloadTypes = {\n  image: [\n    ...(tileSets.map((name) => [\n      name,\n      `${assets}/levelTiles/${name}.png`,\n    ]) as any),\n    [\"playerBody\", assets + \"player/body.png\"],\n    [\"playerVisual\", assets + \"player/ball.png\"],\n    [\"playerWhite\", assets + \"player/ball_white.png\"],\n\n    [\"spark\", assets + \"env/spark.png\"],\n    [\"diplace\", assets + \"noise.png\"],\n\n    [\"dialogCenter\", assets + \"ui/dialog-2.png\"],\n    [\"dialogLeft\", assets + \"ui/dialog-1.png\"],\n    [\"dialogRight\", assets + \"ui/dialog-3.png\"],\n    [\"dialogNextButton\", assets + \"ui/dialog-button-next.png\"],\n    [\"dialogSkipButton\", assets + \"ui/dialog-button-skip.png\"],\n\n    //portraits\n    [tal.PORTRAIT, assets + \"portraits/TAL/portrait.png\"],\n  ],\n  spritesheet: [\n    [\n      \"coin\",\n      assets + \"env/coin.png\",\n      { frameWidth: 32, frameHeight: 32, endFrame: 9 },\n    ],\n  ],\n  atlas: [\n    [\"buttons\", assets + \"buttons.png\", assets + \"buttons.json\"],\n    [\"bridges\", assets + \"bridget.png\", assets + \"bridget.json\"],\n    [\"button\", assets + \"env/button.png\", assets + \"env/button.json\"],\n  ],\n  tilemapTiledJSON: [],\n};\n","export const savesNames = {\n  coinStorageAmt: \"coinsAmount\",\n  currentHp: \"currentHp\",\n  keysList: \"keysList\",\n};\n\nexport const events = {\n  CHANGE_COIN_AMT: \"CHANGE_COIN_AMT\",\n  CHANGE_CURRENT_HP: \"CHANGE_CURRENT_HP\",\n  CHANGE_KEYS: \"CHANGE_KEYS\",\n};\n","export function createGuard<Type>(checkedKey: string) {\n  return function (value: Type | any): value is Type {\n    if (!value) {\n      return false;\n    }\n\n    //@ts-ignore\n    const result = (value as Type)[checkedKey];\n\n    return !!result || result === 0;\n  };\n}\n\nexport default createGuard;\n","import EventEmitter from \"events\";\n\nexport const createListener = (\n  emitter: EventEmitter,\n  event: string,\n  callBack: (value: any) => void,\n) => {\n  emitter.addListener(event, callBack);\n\n  return () => {\n    emitter.removeListener(event, callBack);\n  };\n};\n","import { EventEmitter } from \"events\";\nimport { events, savesNames } from \"./config\";\nimport { createListener } from \"utils\";\nimport { ProgressState } from \"./type\";\n\nclass ProgressManager {\n  constructor() {\n    this.getSavedValues();\n  }\n\n  private state: ProgressState = {\n    coins: 0,\n    hp: 100,\n    keys: [],\n  };\n  private emitter = new EventEmitter();\n\n  private async getSavedValues() {\n    try {\n      const coins =\n        Number(\n          JSON.parse(localStorage.getItem(savesNames.coinStorageAmt) || \"0\"),\n        ) || 0;\n\n      const hp = Number(localStorage.getItem(savesNames.currentHp));\n      const keys = JSON.parse(\n        localStorage.getItem(savesNames.keysList) || \"[]\",\n      ) as ProgressState[\"keys\"];\n\n      if (coins) this.state.coins = coins;\n      if (hp) this.state.hp = hp;\n      if (keys?.length) this.state.keys = keys;\n    } catch (error) {}\n  }\n\n  //#region Listeners\n  private coinsListener = (callBack: (v: number) => void) =>\n    createListener(this.emitter, events.CHANGE_COIN_AMT, callBack);\n  private setCoins = (v: number) => {\n    this.state.coins = v;\n\n    localStorage.setItem(\n      savesNames.coinStorageAmt,\n      JSON.stringify(this.state.coins),\n    );\n    this.emitter.emit(events.CHANGE_COIN_AMT, this.state.coins);\n  };\n  private hpListener = (callBack: (v: number) => void) =>\n    createListener(this.emitter, events.CHANGE_CURRENT_HP, callBack);\n  private setHP = (v: number) => {\n    this.state.hp = v;\n\n    localStorage.setItem(savesNames.currentHp, JSON.stringify(this.state.hp));\n    this.emitter.emit(events.CHANGE_CURRENT_HP, this.state.hp);\n  };\n  private keysListener = (callBack: (v: string[]) => void) =>\n    createListener(this.emitter, events.CHANGE_KEYS, callBack);\n  private setKey = (v: string | string[]) => {\n    if (Array.isArray(v)) {\n      this.state.keys = v;\n    } else {\n      this.state.keys.push(v);\n    }\n\n    localStorage.setItem(savesNames.keysList, JSON.stringify(this.state.keys));\n    this.emitter.emit(events.CHANGE_KEYS, this.state.keys);\n  };\n\n  listeners = {\n    coins: this.coinsListener,\n    keys: this.keysListener,\n    hp: this.hpListener,\n  } as const;\n  setters = {\n    coins: this.setCoins,\n    keys: this.setKey,\n    hp: this.setHP,\n  } as const;\n  getters = {\n    coins: () => this.state.coins,\n    keys: () => this.state.keys,\n    hp: () => this.state.hp,\n  };\n\n  //#endregion Listeners\n  addCoin = () => {\n    this.setCoins(this.state.coins + 1);\n  };\n}\n\nexport const progressManager = new ProgressManager();\n","import { PlayerParamsConfig } from \"game/type\";\nimport { settingsConfig } from \"../../game\";\nimport DefaultScene from \"../Default\";\nimport { progressManager } from \"managers\";\n\nconst localName = \"coordinates_\";\nexport class Player {\n  cursors?: Phaser.Types.Input.Keyboard.CursorKeys;\n  playerBody!: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody;\n  playerVisual!: Phaser.GameObjects.Sprite;\n  playerWhite!: Phaser.GameObjects.Sprite;\n  camera!: Phaser.Cameras.Scene2D.Camera;\n  playerParamsConfig: PlayerParamsConfig = {\n    blockMove: {\n      left: {\n        blocked: false,\n        time: 0,\n      },\n      right: {\n        blocked: false,\n        time: 0,\n      },\n    },\n  };\n  coordinates = {\n    x: 0,\n    y: 0,\n  };\n  HP = progressManager.getters.hp();\n\n  constructor(scene: DefaultScene) {\n    const { world, map } = scene;\n\n    if (map && world) {\n      this.createPlayer(scene, map, world);\n      this.createCamera(scene, map, this.playerBody);\n    }\n    this.createTeleport(scene, this.playerBody);\n  }\n\n  createPlayer(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    world: Phaser.Tilemaps.TilemapLayer,\n  ) {\n    const { playerBounce } = settingsConfig;\n    const layer = map.getObjectLayer(\"player\");\n    const playerData = layer?.objects[0];\n\n    this.playerBody = scene.physics.add\n      .sprite(playerData?.x || 0, playerData?.y || 0, \"playerBody\")\n      .setAlpha(0);\n\n    this.playerVisual = scene.add.sprite(\n      this.playerBody.x,\n      this.playerBody.y,\n      \"playerVisual\",\n    );\n    this.playerWhite = scene.add\n      .sprite(this.playerBody.x, this.playerBody.y, \"playerWhite\")\n      .setAlpha(0)\n      .setDepth(Infinity);\n\n    this.playerBody\n      .setBounce(playerBounce)\n      .setCircle(this.playerBody.width / 2);\n    scene.physics.add.collider(this.playerBody, world);\n    this.playerBody.body.setCollideWorldBounds(true);\n    scene.physics.world.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\n    world.setCollisionByExclusion([-1], true);\n\n    this.cursors = scene.input.keyboard?.createCursorKeys();\n\n    const setDefaultCoordinates = () => {\n      this.coordinates = {\n        x: this.playerBody.x || 0,\n        y: this.playerBody.y || 0,\n      };\n    };\n\n    try {\n      const id = scene.levelName;\n      const storeData = localStorage.getItem(`${localName}${id}`);\n      if (!storeData) setDefaultCoordinates();\n      else {\n        const coordinates = JSON.parse(storeData) as Player[\"coordinates\"];\n        this.coordinates = coordinates;\n      }\n    } catch (error) {\n      setDefaultCoordinates();\n    }\n  }\n\n  createCamera(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n  ) {\n    this.camera = scene.cameras.main;\n    this.camera.setBounds(0, 0, map.widthInPixels, map.heightInPixels);\n    this.smoothMoveCameraTowards(player);\n  }\n\n  smoothMoveCameraTowards(\n    target: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody | null,\n    smoothFactor?: number,\n  ) {\n    if (this.camera && target) {\n      if (smoothFactor === undefined) {\n        smoothFactor = 0;\n      }\n      this.camera.scrollX =\n        smoothFactor * this.camera.scrollX +\n        (1 - smoothFactor) * (target.x - this.camera.width * 0.5);\n      this.camera.scrollY =\n        smoothFactor * this.camera.scrollY +\n        (1 - smoothFactor) * (target.y - this.camera.height * 0.5);\n    }\n  }\n\n  createTeleport(\n    scene: DefaultScene,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n  ) {\n    const { x: startX, y: startY } = this.coordinates;\n    const { width, height } = player;\n\n    const playerSprite = scene.add.sprite(startX, startY, \"playerVisual\");\n    playerSprite.setAlpha(0.5);\n    const fx = playerSprite.preFX?.addDisplacement(\"diplace\", 1, 0.5);\n    const createAnchor = scene.add.particles(0, 0, \"spark\", {\n      speed: { min: 0, max: 100 },\n      angle: { min: 0, max: 360 },\n      scale: { start: 0.7, end: 0 },\n      tint: 0xff00ff,\n      blendMode: \"ADD\",\n      lifespan: 250,\n      rotate: { min: -180, max: 180 },\n      emitting: false,\n    });\n\n    const createTeleport = scene.add.particles(0, 0, \"spark\", {\n      speed: { min: 0, max: 250 },\n      angle: { min: 0, max: 360 },\n      scale: { start: 1.5, end: 0 },\n      alpha: {\n        start: 1,\n        end: 0,\n        ease: Phaser.Math.Easing.Quadratic.InOut,\n      },\n      tint: 0x008489,\n      blendMode: \"ADD\",\n      lifespan: 400,\n      rotate: { min: -180, max: 180 },\n      emitting: false,\n    });\n\n    scene.tweens.add({\n      targets: fx,\n      x: -1,\n      y: 0.25,\n      yoyo: true,\n      loop: -1,\n      duration: 5000,\n      ease: \"sine.inout\",\n    });\n\n    scene.tweens.add({\n      targets: playerSprite,\n      angle: -360,\n      loop: -1,\n      duration: 2000,\n      ease: \"linear\",\n    });\n\n    scene.tweens.add({\n      targets: playerSprite,\n      alpha: 0.25,\n      loop: -1,\n      duration: 3500,\n      yoyo: true,\n      ease: \"sine.inout\",\n    });\n\n    scene.input.keyboard?.on(\"keydown-ENTER\", () => {\n      this.coordinates = {\n        x: player.x || 0,\n        y: player.y || 0,\n      };\n\n      const { x, y } = this.coordinates;\n      playerSprite.setPosition(x, y);\n      createAnchor.explode(100, x, y);\n\n      try {\n        const id = scene.levelName;\n        localStorage.setItem(\n          `${localName}${id}`,\n          JSON.stringify(this.coordinates),\n        );\n      } catch (error) {}\n    });\n\n    scene.input.keyboard?.on(\"keydown-SPACE\", () => {\n      const { x, y } = this.coordinates;\n      if (player) {\n        player.x = x;\n        player.y = y;\n      }\n\n      createTeleport.explode(300, x, y);\n    });\n  }\n\n  update(time: number, delta: number, isBlocked?: boolean) {\n    this.control(delta, time, isBlocked);\n    this.resetBlockMove(time);\n    this.controlPlayerBody(delta);\n    this.smoothMoveCameraTowards(this.playerBody, 0.9);\n\n    const { x, y } = this.playerVisual;\n    this.playerWhite.setPosition(x, y);\n  }\n\n  controlPlayerBody(delta: number) {\n    this.playerVisual.x = this.playerBody.x;\n    this.playerVisual.y = this.playerBody.y;\n\n    if (this.playerBody.body.velocity.x) {\n      this.playerVisual.angle +=\n        delta * 0.003 * this.playerBody.body.velocity.x;\n    }\n  }\n\n  control(delta: number, time: number, isBlocked?: boolean) {\n    const {\n      maxXVelocity,\n      startedXVelocity,\n      flyXVelocity,\n      wallJumpXVelocity,\n      wallJumpYVelocity,\n      jumpVelocity,\n      inertia,\n      playerAcceleration,\n    } = settingsConfig;\n\n    const { velocity } = this.playerBody.body;\n    const oldVelocityX = velocity.x;\n\n    ///---- Left\n    if (\n      this.cursors?.left.isDown &&\n      !this.playerParamsConfig.blockMove.left.blocked &&\n      !isBlocked\n    ) {\n      if (!this.playerBody.body.blocked.none) {\n        if (oldVelocityX === 0) {\n          velocity.x = -startedXVelocity;\n        } else if (oldVelocityX > 0) {\n          velocity.x = oldVelocityX * -1;\n        } else if (velocity.x > maxXVelocity * -1) {\n          velocity.x -= playerAcceleration(delta);\n        } else if (velocity.x >= maxXVelocity * -1) {\n          velocity.x = maxXVelocity * -1;\n        }\n      } else {\n        velocity.x -= flyXVelocity;\n      }\n\n      ///---- Right\n    } else if (\n      this.cursors?.right.isDown &&\n      !this.playerParamsConfig.blockMove.right.blocked &&\n      !isBlocked\n    ) {\n      if (!this.playerBody.body.blocked.none) {\n        if (oldVelocityX === 0) {\n          velocity.x = startedXVelocity;\n        } else if (oldVelocityX < 0) {\n          velocity.x = oldVelocityX * -1;\n        } else if (velocity.x < maxXVelocity) {\n          velocity.x += playerAcceleration(delta);\n        } else if (velocity.x >= maxXVelocity) {\n          velocity.x = maxXVelocity;\n        }\n      } else {\n        velocity.x += flyXVelocity;\n      }\n      ///---- None\n    } else {\n      if (this.playerBody.body.blocked.down) {\n        if (velocity.x > inertia) {\n          velocity.x -= delta * 2;\n        } else if (velocity.x < -inertia) {\n          velocity.x += delta * 2;\n        } else {\n          velocity.x = 0;\n        }\n      }\n    }\n\n    ///---- Up\n    if (this.cursors?.up.isDown && !isBlocked) {\n      if (this.playerBody.body.blocked.left) {\n        this.setBlockMove(\"left\", time);\n        this.playerBody.setVelocityX(Math.max(wallJumpXVelocity, oldVelocityX));\n        this.playerBody.setVelocityY(-wallJumpYVelocity);\n      } else if (this.playerBody.body.blocked.right) {\n        this.setBlockMove(\"right\", time);\n        this.playerBody.setVelocityX(\n          Math.min(-wallJumpXVelocity, oldVelocityX),\n        );\n        this.playerBody.setVelocityY(-wallJumpYVelocity);\n      } else if (this.playerBody.body.blocked.down) {\n        this.playerBody.setVelocityY(-jumpVelocity);\n      }\n    }\n  }\n  setBlockMove(direction: keyof PlayerParamsConfig[\"blockMove\"], time: number) {\n    const { blockMove } = this.playerParamsConfig;\n    blockMove[direction].blocked = true;\n    blockMove[direction].time = time;\n  }\n\n  resetBlockMove(time: number) {\n    const { moveBlockTime } = settingsConfig; //ms\n    const { left, right } = this.playerParamsConfig.blockMove;\n\n    const canLeftMove = time - left.time > moveBlockTime;\n\n    const canRightMove = time - right.time > moveBlockTime;\n\n    if (canLeftMove) {\n      left.blocked = false;\n    }\n\n    if (canRightMove) {\n      right.blocked = false;\n    }\n  }\n}\n","import {\n  ActiveDialog,\n  DialogList,\n  DialogProperties,\n  IgnoredDialogs,\n  Tweens,\n} from \"game/type\";\nimport { Extensions } from \".\";\nimport DefaultScene from \"../Default\";\nimport { settingsConfig } from \"game/modules/game\";\n\nexport class Dialog {\n  scene: DefaultScene;\n  extensions: Extensions;\n\n  wrapper: Phaser.GameObjects.Container;\n  tweens: Tweens;\n\n  activeDialog: ActiveDialog | null = null;\n  sceneDialogs: DialogList;\n  sceneId: number;\n\n  constructor(scene: DefaultScene, dialogs: DialogList, sceneId: number) {\n    this.sceneId = sceneId;\n    this.sceneDialogs = dialogs;\n    this.scene = scene;\n    this.extensions = scene.extensions;\n\n    const { width, height } = scene.game.config;\n    const sceneWidth = Number(width);\n\n    const leftBGFrame = scene.add.sprite(0, 0, \"dialogLeft\").setOrigin(0, 0);\n    const rightBGFrame = scene.add\n      .sprite(sceneWidth, 0, \"dialogRight\")\n      .setOrigin(0, 0);\n    rightBGFrame.setPosition(\n      rightBGFrame.x - rightBGFrame.width,\n      rightBGFrame.y,\n    );\n    const { buttons } = settingsConfig.dialog;\n\n    const nextButton = scene.add\n      .sprite(\n        sceneWidth - buttons.margin.right,\n        buttons.margin.top,\n        \"dialogNextButton\",\n      )\n      .setInteractive()\n      .setScrollFactor(0)\n      .setOrigin(1, 0);\n    const skipButton = scene.add\n      .sprite(\n        sceneWidth - buttons.margin.right,\n        buttons.margin.top * 2 + buttons.height,\n        \"dialogSkipButton\",\n      )\n      .setInteractive()\n      .setScrollFactor(0)\n      .setOrigin(1, 0);\n    // this.extensions.imgFit(nextButton, buttons.width, buttons.height); //fit img to config size\n    // this.extensions.imgFit(skipButton, buttons.width, buttons.height); //fit img to config size\n\n    const { nextDialog, dialogEnd } = this;\n    const nextButtonClick = nextDialog.bind(this);\n    const skipButtonClick = dialogEnd.bind(this, true);\n    nextButton.on(\"pointerup\", nextButtonClick);\n    skipButton.on(\"pointerup\", skipButtonClick);\n\n    const centerBG = scene.add\n      .tileSprite(\n        leftBGFrame.width,\n        0,\n        sceneWidth - leftBGFrame.width - rightBGFrame.width,\n        rightBGFrame.height,\n        \"dialogCenter\",\n      )\n      .setOrigin(0, 0);\n\n    this.wrapper = scene.add\n      .container(0, 0)\n      .add([leftBGFrame, rightBGFrame, centerBG, nextButton, skipButton])\n      .setScrollFactor(0)\n      .setPosition(0, -centerBG.height);\n\n    const hideTween = scene.tweens.create({\n      targets: this.wrapper,\n\n      y: -centerBG.height,\n      ease: \"Quad.easeInOut\",\n      repeat: 0,\n      duration: settingsConfig.dialogWrapperMoveTime,\n    });\n\n    const showTween = scene.tweens.create({\n      targets: this.wrapper,\n      y: 0,\n      ease: \"Quad.easeInOut\",\n      repeat: 0,\n      duration: settingsConfig.dialogWrapperMoveTime,\n    });\n\n    this.tweens = {\n      hide: hideTween,\n      show: showTween,\n    };\n\n    this.createDialogTriggers(scene.map);\n  }\n\n  tweensPlay(\n    tween: Phaser.Tweens.Tween | Phaser.Tweens.Tween[],\n    onComplete?: () => void,\n  ) {\n    let current: Phaser.Tweens.Tween;\n    if (Array.isArray(tween)) current = tween[0];\n    else current = tween;\n    if (onComplete) {\n      current.once(\"complete\", () => {\n        onComplete && onComplete();\n      });\n    }\n    current.play();\n  }\n\n  showDialog(onComplete?: () => void) {\n    if (this.activeDialog) {\n      this.activeDialog.isActive = true;\n    }\n\n    this.tweensPlay(this.tweens.show, onComplete);\n  }\n\n  hideDialog(onComplete?: () => void) {\n    if (this.activeDialog) {\n      this.activeDialog.isActive = false;\n    }\n    this.tweensPlay(this.tweens.hide, onComplete);\n  }\n\n  createConversation(dialogId: number) {\n    const activeDialog = this.sceneDialogs[dialogId];\n    if (activeDialog) {\n      this.activeDialog = {\n        dialog: activeDialog,\n        replica: 0,\n        id: dialogId,\n        objects: {},\n      };\n\n      const { name, portrait, replica } = activeDialog[0];\n      this.createPortrait(portrait);\n      this.createName(name);\n      this.createText(replica);\n\n      this.showDialog();\n    }\n  }\n\n  createPortrait(imgName: string) {\n    const { height, width, y } = settingsConfig.portraits;\n    const firstFrame = this.wrapper.list[0];\n    const portrait = this.scene.add\n      //@ts-ignore\n      .image(firstFrame.width || 25, y, imgName)\n      .setOrigin(0);\n\n    this.extensions.imgFit(portrait, width, height);\n\n    this.wrapper.add(portrait);\n\n    if (this.activeDialog) {\n      this.activeDialog.objects.portrait = portrait;\n    }\n  }\n\n  createName(name: string) {\n    const { height, width } = settingsConfig.portraits;\n\n    const text = this.scene.make.text({\n      x: 0,\n      y: 0,\n      text: name,\n      origin: { x: 0.5, y: 0 },\n      style: {\n        font: \"25px Arial\",\n        color: settingsConfig.dialog.colors.names,\n        wordWrap: {\n          width: width,\n          useAdvancedWrap: true,\n        },\n      },\n    });\n\n    text.x = 25 + width / 2;\n    text.y = height + 30;\n\n    this.wrapper.add(text);\n\n    if (this.activeDialog) {\n      this.activeDialog.objects.name = text;\n    }\n  }\n\n  createText(replica: string) {\n    const { y, width: portraitWidth } = settingsConfig.portraits;\n    const { buttons, colors } = settingsConfig.dialog;\n    const textMargin = 50;\n    const text = this.scene.make.text({\n      x: portraitWidth + textMargin,\n      y: y * 2,\n      text: replica,\n      origin: { x: 0, y: 0 },\n      style: {\n        font: \"bold 25px Arial\",\n        color: colors.text,\n        wordWrap: {\n          width:\n            Number(this.scene.game.config.width) -\n            textMargin * 2 -\n            portraitWidth -\n            buttons.width,\n          useAdvancedWrap: true,\n        },\n      },\n    });\n\n    this.wrapper.add(text);\n\n    if (this.activeDialog) {\n      this.activeDialog.objects.text = text;\n    }\n  }\n\n  clearDialog() {\n    if (this.activeDialog) {\n      const { objects } = this.activeDialog;\n\n      objects.name?.destroy();\n      objects.portrait?.destroy();\n      objects.text?.destroy();\n    }\n  }\n\n  nextDialog() {\n    if (this.activeDialog) {\n      const { dialog, replica } = this.activeDialog;\n      const actualReplicaNumber = replica + 1;\n\n      if (actualReplicaNumber < dialog.length) {\n        const {\n          name,\n          portrait,\n          replica: valueOfReplica,\n        } = dialog[actualReplicaNumber];\n        this.clearDialog();\n\n        this.createPortrait(portrait);\n        this.createName(name);\n        this.createText(valueOfReplica);\n\n        this.activeDialog.replica = actualReplicaNumber;\n      } else {\n        this.dialogEnd();\n      }\n    }\n  }\n\n  dialogEnd(isSkip?: boolean) {\n    if (this.activeDialog) {\n      const { dialog, replica, id: dialogId } = this.activeDialog;\n      const actualReplicaElement = dialog[replica] || dialog[dialog.length - 1];\n      actualReplicaElement.callback && actualReplicaElement.callback();\n      this.closeDialog();\n\n      if (isSkip && (dialogId || dialogId === 0)) {\n        const ignoredDialogs: IgnoredDialogs = JSON.parse(\n          localStorage.getItem(\"ignoredDialogs\") || \"[]\",\n        );\n        const actualSceneIgnored = ignoredDialogs[this.sceneId] || [];\n        actualSceneIgnored.push(dialogId);\n\n        const newActualIgnored = [...new Set(actualSceneIgnored)];\n        ignoredDialogs[this.sceneId] = newActualIgnored;\n\n        localStorage.setItem(\"ignoredDialogs\", JSON.stringify(ignoredDialogs));\n      }\n    }\n  }\n\n  closeDialog() {\n    const { clearDialog } = this;\n    this.hideDialog(clearDialog.bind(this));\n  }\n\n  createTrigger(x: number, y: number, width: number, height: number) {\n    const debug = settingsConfig.dialog.triggerDebug;\n    return this.scene.extensions.createRectangle(\n      x,\n      y,\n      width,\n      height,\n      0x00ff00,\n      debug ? 0.3 : 0,\n    );\n  }\n\n  createDialogTriggers(map: Phaser.Tilemaps.Tilemap | null) {\n    if (map) {\n      const layer = map.getObjectLayer(\"dialogs\");\n      const triggerObjects = layer?.objects;\n\n      triggerObjects?.forEach(\n        ({ x = -100, y = -100, width = 32, height = 32, properties }) => {\n          const props: DialogProperties[] = properties;\n          const dialogId = Number(\n            props.find((value) => value.name === \"id\")?.value,\n          );\n\n          const trigger = this.scene.add.zone(x, y, width, height).setOrigin(0);\n          this.scene.physics.world.enable(trigger);\n          //@ts-ignore\n          trigger.body.setAllowGravity(false);\n\n          //@ts-ignore\n          trigger.body.moves = false;\n\n          const { player } = this.scene;\n          if (player?.playerBody) {\n            this.scene.physics.add.overlap(player.playerBody, trigger, () => {\n              this.createConversation(dialogId);\n              trigger.destroy();\n            });\n          }\n        },\n      );\n    }\n  }\n}\n","import { Scene } from \"phaser\";\n\nimport {\n  ObjectWithCorners,\n  TiledObjectProperties,\n  UnpackedTiledObjectProperties,\n} from \"game/type\";\n\nexport class Extensions {\n  scene: Scene;\n\n  constructor(scene: Scene) {\n    this.scene = scene;\n  }\n\n  imgFit(img: Phaser.GameObjects.Image, maxWidth: number, maxHeight: number) {\n    const widthScale = maxWidth / img.width;\n    const heightScale = maxHeight / img.height;\n\n    const scale = Math.min(widthScale, heightScale, 1);\n\n    img.setScale(scale);\n  }\n\n  createRectangle(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    color: number,\n    alpha: number,\n  ) {\n    return this.scene.add\n      .graphics()\n      .fillStyle(color, alpha)\n      .fillRect(x, y, width, height);\n  }\n\n  getPropsFromObject<Return = UnpackedTiledObjectProperties>(\n    props: TiledObjectProperties[],\n  ) {\n    return props.reduce((acm, { name, value }) => {\n      return {\n        ...acm,\n        [name]: value,\n      };\n    }, {} as Return);\n  }\n\n  findCorners(list: ObjectWithCorners[]) {\n    const upLeftX = Math.min.apply(\n      null,\n      list.reduce((acm: number[], { x }) => {\n        acm.push(x);\n        return acm;\n      }, []),\n    );\n    const upLeftY = Math.min.apply(\n      null,\n      list.reduce((acm: number[], { y }) => {\n        acm.push(y);\n        return acm;\n      }, []),\n    );\n\n    const upRightX = Math.max.apply(\n      null,\n      list.reduce((acm: number[], { x, width }) => {\n        acm.push(x + width);\n        return acm;\n      }, []),\n    );\n    const upRightY = Math.max.apply(\n      null,\n      list.reduce((acm: number[], { y, height }) => {\n        acm.push(y + height);\n        return acm;\n      }, []),\n    );\n\n    const maxY = Math.max.apply(\n      null,\n      list.reduce((acm: number[], { y }) => {\n        acm.push(y);\n        return acm;\n      }, []),\n    );\n\n    const rectWidth = upRightX - upLeftX;\n    const rectHeight = upRightY - upLeftY;\n    const x = upLeftX;\n    const y = maxY;\n\n    return {\n      x,\n      y,\n      rectWidth,\n      rectHeight,\n    };\n  }\n}\n","import { createGuard, createTimeouts } from \"utils\";\n\nimport DefaultScene from \"../Default\";\nimport {\n  ButtonProps,\n  BridgetProps,\n  ButtonTexture,\n  LevelState,\n  ObjectWithCorners,\n  FinishProps,\n} from \"game/type\";\nimport { settingsConfig } from \"game/modules/game\";\nimport { progressManager } from \"managers\";\n\nconst arcadeBodyGuard = createGuard<Phaser.Physics.Arcade.Body>(\"setVelocity\");\nconst { duration, ease } = settingsConfig.bridges.animation;\n\nexport class Level {\n  constructor(scene: DefaultScene) {\n    this.scene = scene;\n\n    const map = scene.map;\n    const player = scene.player?.playerBody;\n\n    if (map && player) {\n      this.createButtons(scene, map, player);\n      this.createWalls(scene, map, player);\n      this.createCoins(scene, map, player);\n      this.createTraps(scene, map, player);\n      this.createFinish(scene, map, player);\n    }\n  }\n  private scene: DefaultScene;\n  private state: LevelState = {};\n  overlap = false;\n\n  private createButtons(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n  ) {\n    const bridgetButtonsLayer = map.getObjectLayer(\"buttons\");\n    const bridgetButtonsList = bridgetButtonsLayer?.objects;\n\n    const [defaultButton, pushedButton] = scene.textures\n      .get(\"button\")\n      .getFrameNames() as ButtonTexture[];\n\n    bridgetButtonsList?.forEach(\n      ({ x = -100, y = -100, width = -100, height = -100, properties }, i) => {\n        const props: ButtonProps =\n          scene.extensions.getPropsFromObject(properties);\n\n        const btnX = x + width / 2,\n          btnY = y + height;\n        const button = props.invisible\n          ? null\n          : scene.add\n              .sprite(btnX, btnY, \"button\", defaultButton)\n              .setOrigin(0.5, 1);\n\n        const buttonZone = scene.add.zone(x, y, width, height).setOrigin(0, 0);\n        scene.physics.world.enable(\n          buttonZone,\n          Phaser.Physics.Arcade.STATIC_BODY,\n        );\n\n        if (arcadeBodyGuard(buttonZone)) {\n          buttonZone.setAllowGravity(false);\n        }\n\n        scene.physics.add.overlap(player, buttonZone, () => {\n          const currentKey = props.key;\n          const foundKey = progressManager.getters\n            .keys()\n            .find((key) => key === currentKey);\n          if (currentKey && !foundKey) return;\n\n          this.overlap = true;\n          setTimeout(() => {\n            this.overlap = false;\n          }, 5);\n          button?.setTexture(\"button\", pushedButton);\n\n          if (props.is_wall) this.activateWall(scene, map, player, props.id);\n          else this.activateBridge(scene, map, player, props.id);\n          buttonZone.destroy();\n        });\n      },\n    );\n  }\n\n  private createFinish(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n  ) {\n    const layer = map.getObjectLayer(\"finish\");\n    const finishList = layer?.objects;\n    const texture = scene.textures.get(\"finish\").getFrameNames();\n\n    finishList?.forEach(\n      ({ x = -100, y = -100, width = -100, height = -100, properties }) => {\n        const props: FinishProps =\n          scene.extensions.getPropsFromObject(properties);\n\n        const finish = scene.add\n          .tileSprite(x, y, width, height, \"buttons\", texture[0])\n          .setOrigin(0, 1);\n        scene.physics.world.enable(finish);\n        if (arcadeBodyGuard(finish.body)) {\n          finish.body.setAllowGravity(false);\n        }\n\n        scene.physics.add.overlap(player, finish, () => {\n          // FINISH HERE\n          const nextLevelId = props.nextLevelId;\n          console.log(\"🚀 ~ ~ nextLevelId:\", nextLevelId)\n        });\n      },\n    );\n  }\n\n  private createCoins(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n  ) {\n    scene.anims.create({\n      key: \"coinAnimation\",\n      frames: \"coin\",\n      frameRate: 10,\n      repeat: -1,\n    });\n    const fireworks = scene.add.particles(0, 0, \"spark\", {\n      speed: { min: 0, max: 80 },\n      angle: { min: 0, max: 360 },\n      scale: { start: 0.5, end: 0 },\n      alpha: { start: 0, end: 1 },\n      blendMode: \"ADD\",\n      lifespan: 500,\n      rotate: { min: -180, max: 180 },\n      emitting: false,\n    });\n\n    const coinsLayer = map.getObjectLayer(\"coins\");\n\n    const coins = coinsLayer?.objects.map(({ x = 0, y = 0, width, height }) => {\n      const sprite = scene.add.sprite(x, y, \"coin\", 0).setOrigin(0, 1);\n      sprite.play(\"coinAnimation\");\n\n      this.scene.physics.world.enable(\n        sprite,\n        Phaser.Physics.Arcade.STATIC_BODY,\n      );\n\n      scene.physics.add.overlap(player, sprite, () => {\n        this.overlap = true;\n        setTimeout(() => {\n          this.overlap = false;\n        }, 5);\n\n        const { x, y, width, height } = sprite;\n        fireworks.explode(100, x + width / 2, y - height / 2);\n        sprite.destroy();\n        // ADD +1 COIN HERE\n        progressManager.addCoin();\n      });\n    });\n  }\n\n  private createWalls(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n  ) {\n    const layer = map.getObjectLayer(\"walls\");\n    const bridgesList = layer?.objects;\n    const textures = scene.textures.get(\"bridges\").getFrameNames();\n\n    const bridges: Record<\n      string,\n      { sprite: Phaser.GameObjects.TileSprite; props: BridgetProps }[]\n    > = {};\n\n    bridgesList?.forEach(\n      ({ x = -100, y = -100, width = 0, height = 0, properties }, i) => {\n        const props: BridgetProps =\n          scene.extensions.getPropsFromObject(properties);\n\n        if (props.id === undefined) return;\n\n        const block = scene.add\n          .tileSprite(x, y + height, width, height, \"bridges\", textures[0])\n          .setOrigin(0, 1);\n\n        if (!bridges[props.id]) bridges[props.id] = [];\n\n        bridges[props.id].push({ props, sprite: block });\n      },\n    );\n\n    Object.entries(bridges).forEach(([id, blocks]) => {\n      const { x, y, rectWidth, rectHeight } = scene.extensions.findCorners(\n        blocks.map(({ sprite }) => sprite),\n      );\n\n      const bridgeBody = scene.add\n        .zone(x, y, rectWidth, rectHeight)\n        .setOrigin(0, 1);\n      this.scene.physics.world.enable(\n        bridgeBody,\n        Phaser.Physics.Arcade.STATIC_BODY,\n      );\n\n      if (arcadeBodyGuard(bridgeBody.body)) {\n        bridgeBody.body.setAllowGravity(false).setImmovable().setFriction(0, 0);\n        bridgeBody.body.moves = false;\n      }\n      scene.physics.add.collider(player, bridgeBody, () => {});\n\n      this.state[id] = {\n        body: bridgeBody,\n        bridges: blocks,\n      };\n    });\n  }\n\n  private activateBridge(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n    id?: string | number,\n  ) {\n    if (id === undefined) {\n      return;\n    }\n\n    const layer = map.getObjectLayer(\"bridges\");\n    const bridgesList = layer?.objects;\n    const textures = scene.textures.get(\"bridges\").getFrameNames();\n\n    const gameHeight = Number(map.heightInPixels);\n    const bridgeSprites: ObjectWithCorners[] = [];\n\n    bridgesList?.forEach(\n      ({ x = -100, y = -100, width = 0, height = 0, properties }, i) => {\n        const props =\n          scene.extensions.getPropsFromObject<BridgetProps>(properties);\n\n        if (props.id === id) {\n          const yFromDirection = props.from_top\n            ? -height * 2\n            : gameHeight + height * 2;\n\n          const bridge = scene.add\n            .tileSprite(\n              x,\n              yFromDirection,\n              width,\n              height,\n              \"bridges\",\n              textures[0],\n            )\n            .setOrigin(0, 0);\n\n          bridgeSprites.push({ ...bridge, y });\n\n          const bridgeAnimation = scene.tweens.add({\n            targets: bridge,\n            y,\n            ease,\n            duration,\n            repeat: 0,\n          });\n        }\n      },\n    );\n\n    setTimeout(() => {\n      const { x, y, rectWidth, rectHeight } =\n        scene.extensions.findCorners(bridgeSprites);\n      const bridgeBody = scene.add\n        .zone(x, y, rectWidth, rectHeight)\n        .setOrigin(0, 0);\n      this.scene.physics.world.enable(\n        bridgeBody,\n        Phaser.Physics.Arcade.STATIC_BODY,\n      );\n\n      if (arcadeBodyGuard(bridgeBody.body)) {\n        bridgeBody.body.setAllowGravity(false).setImmovable().setFriction(0, 0);\n        bridgeBody.body.moves = false;\n      }\n\n      scene.physics.add.collider(player, bridgeBody, () => {});\n    }, duration);\n  }\n  private activateWall(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n    id?: string | number,\n  ) {\n    if (!id) return;\n\n    const gameHeight = Number(map.heightInPixels);\n\n    const { body, bridges } = this.state[id];\n\n    body.destroy();\n\n    bridges.forEach(({ props, sprite }) => {\n      const y = props.from_top\n        ? -(sprite.height + 100)\n        : Number(gameHeight) + sprite.height + 100;\n\n      const animation = scene.tweens.add({\n        targets: sprite,\n        y,\n        ease,\n        duration,\n        repeat: 0,\n      });\n    });\n  }\n\n  private invincible = false;\n  private createTraps(\n    scene: DefaultScene,\n    map: Phaser.Tilemaps.Tilemap,\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody,\n  ) {\n    const layer = map.getObjectLayer(\"traps\");\n    const traps = layer?.objects;\n\n    traps?.forEach(({ x = -100, y = -100, width = 0, height = 0 }) => {\n      const trap = scene.add.zone(x, y, width, height).setOrigin(0, 0);\n      scene.physics.world.enable(trap, Phaser.Physics.Arcade.STATIC_BODY);\n\n      scene.physics.add.overlap(player, trap, () => {\n        player.setAlpha(0);\n        if (!this.invincible) {\n          this.invincible = true;\n          const playerModule = scene.player;\n          const white = scene.player?.playerWhite;\n          if (!white || !playerModule) return;\n\n          playerModule.HP -= 10;\n\n          if (playerModule.HP <= 0) {\n            scene.dead();\n          }\n\n          white.setAlpha(1);\n          let i = 0;\n          const id = setInterval(() => {\n            const alpha = white.alpha === 1 ? 0 : 1;\n            white.setAlpha(alpha);\n            i++;\n            if (i >= 5) {\n              clearTimeout(id);\n              this.invincible = false;\n            }\n          }, 100);\n        }\n      });\n    });\n  }\n}\n","import { progressManager } from \"managers\";\nimport DefaultScene from \"../Default\";\n\nconst config = {\n  x: 5,\n  y: 5,\n  width: 16,\n  height: 100,\n};\n\nexport class GameInterface {\n  constructor(scene: DefaultScene) {\n    this.scene = scene;\n\n    this.prevHpValue = scene.player?.HP || 100;\n    this.createHPBar();\n  }\n  private scene: DefaultScene;\n  private hpBar?: Phaser.GameObjects.Sprite;\n\n  private createHPBar() {\n    const { height, width, x, y } = config;\n    const recGraph = this.scene.add\n      .graphics()\n      .fillStyle(0xffffff)\n      .fillRect(0, 0, width, height);\n    recGraph.generateTexture(\"hpLine\", width, height);\n    recGraph.destroy();\n\n    this.hpBar = this.scene.add\n      .sprite(x, y, \"hpLine\")\n      .setTint(0xff0000)\n      .setOrigin(0, 0)\n      .setScrollFactor(0);\n  }\n\n  private hitId: NodeJS.Timer | null = null;\n  private hitTween?: Phaser.Tweens.Tween;\n  private hit() {\n    let i = 0;\n\n    if (this.hitId === null) {\n      const hp = this.scene.player!.HP;\n      this.hitId = setInterval(() => {\n        const isBlink = !!(i % 2);\n        i++;\n        this.hpBar?.setTint(isBlink ? 0xffffff : 0xff0000);\n        if (i >= 10) {\n          this.hpBar?.setTint(0xff0000);\n          clearInterval(this.hitId!);\n          this.hitId = null;\n\n          this.prevHpValue = hp;\n        }\n      }, 50);\n\n      const percent = hp / progressManager.getters.hp();\n      console.log(\"🚀 ~ GameInterface ~ hit ~ percent:\", percent, hp, progressManager.getters.hp())\n\n      const bridgeAnimation = this.scene.tweens.add({\n        targets: this.hpBar,\n        scaleY: percent,\n        ease: \"linear\",\n        duration: 300,\n      });\n    }\n  }\n\n  private prevHpValue = 100;\n  update = () => {\n    if (!this.scene.player) return;\n\n    if (this.scene.player?.HP !== this.prevHpValue) {\n      this.hit();\n    }\n  };\n}\n","import DefaultScene from \"../scenes/Default\";\n\nexport class Level extends DefaultScene {\n  constructor() {\n    super(\"ex_0\");\n  }\n}\n","import { Scene } from \"phaser\";\n\nimport { preloadData } from \"../game\";\nimport { assets, dialogs, gameResourcesData, tileSets } from \"./assets\";\nimport { Dialog, Extensions, Level, Player, GameInterface } from \"./modules\";\n\nexport default class DefaultScene extends Scene {\n  player: Player | null = null;\n  dialog: Dialog | null = null;\n  level: Level | null = null;\n  interface: GameInterface | null = null;\n  extensions!: Extensions;\n\n  map: Phaser.Tilemaps.Tilemap | null = null;\n  world: Phaser.Tilemaps.TilemapLayer | null = null;\n  visual: Phaser.Tilemaps.TilemapLayer | null = null;\n\n  levelName: string;\n\n  constructor(levelName: string) {\n    super({ key: levelName });\n\n    this.levelName = levelName;\n  }\n\n  preload() {\n    this.extensions = new Extensions(this);\n    preloadData.call(this, {\n      ...gameResourcesData,\n      tilemapTiledJSON: [\n        //@ts-ignore\n        ...gameResourcesData.tilemapTiledJSON,\n        [\"map\", assets + `levels/${this.levelName}.json`],\n      ],\n    });\n  }\n\n  create() {\n    this.map = this.make.tilemap({ key: \"map\" });\n    console.log(\"🚀 ~ DefaultScene ~ create ~ this.map:\", this.map);\n    const layersTilesets = tileSets\n      .map((name) => {\n        return this.map?.addTilesetImage(name, name);\n      })\n      .filter((v) => !!v) as Phaser.Tilemaps.Tileset[];\n\n    if (!layersTilesets.length)\n      throw `wrong tileset data: ${JSON.stringify(layersTilesets)}`;\n\n    this.world = this.map.createLayer(\"level\", layersTilesets, 0, 0);\n    this.visual = this.map.createLayer(\"visual\", layersTilesets, 0, 0);\n\n    this.player = new Player(this);\n    this.dialog = new Dialog(this, dialogs, 0);\n    this.level = new Level(this);\n    this.interface = new GameInterface(this);\n  }\n\n  private restart = false;\n  dead() {\n    if (this.restart) return;\n\n    this.restart = true;\n    this.tweens.add({\n      targets: this.cameras.main,\n      alpha: 0,\n      duration: 500,\n      onComplete: () => {\n        setTimeout(() => {\n          this.restart = false;\n          this.scene.restart();\n        }, 500);\n      },\n    });\n  }\n\n  update(time: number, delta: number) {\n    this.player?.update(\n      time,\n      delta,\n      this.dialog?.activeDialog?.isActive ||\n        this.level?.overlap ||\n        this.restart,\n    );\n\n    this.interface?.update();\n  }\n}\n","import { settingsConfig } from \"../game/settingsConfig\";\nimport { Level } from \"../levels\";\n\nexport const config: Phaser.Types.Core.GameConfig = {\n  type: Phaser.AUTO,\n  parent: \"game-box\",\n  height: 720,\n  width: 1280,\n  scene: [Level],\n  backgroundColor: 0x14003b,\n  physics: {\n    default: \"arcade\",\n    arcade: {\n      gravity: { y: settingsConfig.gravity },\n      // debug: true,\n    },\n  },\n};\n","import { useEffect, useLayoutEffect, useState } from \"react\";\n\nimport { renderGame } from \"./instance\";\nimport css from \"./style.module.css\";\n\nlet game: Phaser.Game | null = null;\n\nexport const Game = () => {\n  const [refBox, setRefBox] = useState<HTMLDivElement | null>(null);\n\n  // useLayoutEffect(() => {\n  //   if (refBox) {\n  //     game = renderGame(refBox.offsetWidth);\n  //   }\n  // }, [refBox]);\n\n  useEffect(() => {\n    if (refBox) {\n      setTimeout(() => {\n        game = renderGame(refBox.offsetWidth);\n      }, 0);\n    }\n\n    return () => {\n      game?.destroy(true, false);\n    };\n  });\n\n  return (\n    <div className={css.root}>\n      <div\n        className={css.game}\n        id=\"game-box\"\n        ref={(ref) => {\n          setRefBox(ref);\n        }}\n      />\n    </div>\n  );\n};\n","import Phaser from \"phaser\";\nimport { config } from \"./modules/service/config\";\n\nexport const renderGame = (w: number) => {\n  return new Phaser.Game(config);\n};\n","import css from \"./style.module.css\";\n\nimport { Game } from \"../../game\";\n\nfunction App() {\n  return (\n    <div className={css.root}>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./containers\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}